version: '3.7'

services:
  minio:
    image: minio/minio:${MINIO_VERSION:-latest}
    init: true
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
      - minio-events:/tmp/events
    ports:
      - "${MINIO_UI_PORT:-9000}:9000"
    environment:
      - MINIO_REGION=${MINIO_REGION:-us-east-1}
      - MINIO_DOMAIN=${MINIO_DOMAIN:-localhost}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-miniotest}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-miniotest}
    command: ["server", "${MINO_DATA_DIR:-/data}"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mc:
    image: minio/mc:${MINIO_VERSION:-latest}
    volumes:
      - mc-config:/root/.mc
    environment:
      - MINIO_REGION=${MINIO_REGION:-us-east-1}
      - MINIO_DOMAIN=${MINIO_DOMAIN:-localhost}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-miniotest}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-miniotest}
    command: ["watch", "play"]

  listener:
    build:
      context: $PWD
    image: candig/listener-service:${LISTENER_VERSION:-latest}
    init: true
    #volumes:
      #- $PWD:/srv
    ports:
      - "${LISTENER_PORT:-8080}:8080"
    environment:
      - MINIO_REGION=${MINIO_REGION:-us-east-1}
      - MINIO_DOMAIN=${MINIO_DOMAIN:-localhost}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-miniotest}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-miniotest}
      - FLASK_ENV=${LISTENER_ENV:-development}
    #command: ["flask", "run"]

  wes-server:
    image: candig/wes-server:${WES_VERSION:-3.3}
    init: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /var/lib/docker/volumes:/var/lib/docker/volumes:rw
      - /tmp:/tmp
    ports:
      - "${WES_PORT:-5000}:5000"
    environment:
      - MINIO_REGION=${MINIO_REGION:-us-east-1}
      - MINIO_DOMAIN=${MINIO_DOMAIN:-localhost}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-miniotest}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-miniotest}
      - FLASK_ENV=${LISTENER_ENV:-development}
    entrypoint: ["wes-server"]
    command:
      - --port=5000
      - --backend=${WES_BACKEND:-wes_service.cwl_runner}
      - --opt=runner=${WES_CWL_RUNNER:-cwltool}

volumes:
  minio-data:
  minio-config:
  minio-events:
  mc-config:

